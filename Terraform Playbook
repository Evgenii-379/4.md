terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 1.6.4"
}
 
variable "yandex_cloud_token" {
  type        = string
  description = "Введите секретный токен от yandex_cloud"
}
 
provider "yandex" {
  token     = "y0_AgAAAABTgKX2AATuwQAAAADynToZYYMEIJgISECCAx-WULXRhpk9lgY" #секретные данные должны быть в сохранности!! Никогда не выкладывайте токен в публичный доступ.
  cloud_id  = "b1gt41qe1o37635d6cud"
  folder_id = "b1g97q8mdvic0d7i8ool"
  zone      = "ru-central1-a"
}
 
resource "yandex_compute_instance" "vm" {
count                  = 2
name                   = "terraform${count.index +1}"
allow_stopping_for_update = true
 
  resources {
    cores  = 2
    memory = 2
  }
 
  boot_disk {
    initialize_params {
      image_id = "fd8li2lvvfc6bdj4c787"
    }
  }
 
  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }
 
  metadata = {
    user-data = "${file("./meta.yml")}"
  }
 
}
resource "yandex_vpc_network" "network-1" {
  name = "network1"
}

resource "yandex_vpc_subnet" "subnet-1" {
  name           = "subnet1"
zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network-1.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}
 
#output "internal_ip_address_vm_1" {
#  value = yandex_compute_instance.vm-1.network_interface.0.ip_address
#}
#output "external_ip_address_vm_1" {
#  value = yandex_compute_instance.vm-1.network_interface.0.nat_ip_address
#}
 
# network-load-balancer.tf
 
resource "yandex_lb_network_load_balancer" "lb-test" {
  name = "lb-test"
 
  listener {
    name = "listener-web-servers"
    port = 80
    external_address_spec {
      ip_version = "ipv4"
    }
  }
 
  attached_target_group {
    target_group_id = "${yandex_lb_target_group.web-servers.id}"
 
    healthcheck {
      name = "http"
      http_options {
        port = 80
        path = "/"
      }
 }
  }
}
resource "yandex_lb_target_group" "web-servers" {
  name      = "web-servers-target-group"
 
 
  target {
    subnet_id = "${yandex_vpc_subnet.subnet-1.id}"
    address   = "${yandex_compute_instance.vm[0].network_interface.0.ip_address}"
  }
 
  target {
    subnet_id = "${yandex_vpc_subnet.subnet-1.id}"
     address   = "${yandex_compute_instance.vm[1].network_interface.0.ip_address}"
  }
}
